{"version":3,"sources":["serviceWorker.js","components/MusicStore/MusicStore.action.js","components/MusicStore/Browse/List/Card/Card.action.js","components/MusicStore/MusicStore.reducer.js","rootReducer.js","styles/global.styles.js","components/MusicStore/Browse/TopBar/TopBar.jsx","components/MusicStore/Browse/List/Card/Card.jsx","components/MusicStore/Browse/List/List.jsx","components/MusicStore/Browse/Browse.jsx","components/MusicStore/MusicStore.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","fetchStoreData","dispatch","type","fetch","then","res","json","payload","catch","err","deleteItem","list","index","duplicateItem","item","initialState","vinyl_records","cds","is_loading","errMsg","rootReducer","combineReducers","musicStore","state","arguments","length","undefined","action","Object","objectSpread","isLoading","listNameDel","updatedList","filter","i","defineProperty","ListName","concat","toConsumableArray","GlobalStyle","createGlobalStyle","_templateObject","TopBar","value","textFieldWidth","buttonWidth","calcWidth","innerWidth","_this","setState","updateList","_this$props","props","originalData","on_filter","txt","artist_name","toLowerCase","includes","name","onResetList","resetList","this","addEventListener","removeEventListener","_this2","title","_this$state","styles","textField","backgroundColor","fontSize","width","form","padding","fontFamily","borderColor","button","borderRadius","letterSpacing","marginTop","react_default","a","createElement","Header","dist","Box","react_text_field_dist_default","style","trailingIcon","react_material_icon_dist_default","role","icon","react_text_field_dist","placeholder","onChange","e","currentTarget","react_button_dist_default","raised","onClick","outlined","color","Component","styled","header","TopBar_templateObject","div","_templateObject2","Card","isHover","onItemEnter","onItemLeave","view","do_duplicateItem","data","_this$props2","do_deleteItem","_this$props$data","genre","artist_image","image","tracks_number","quantity_in_stock","quantity","Item","ref","shape","onMouseEnter","onMouseLeave","BackImg","src","alt","GreyBackground","CenterBox","marginRight","Top","Genre","ArtistImage","Middle","ArtistName","Name","Bottom","TracksNum","Quantity","connect","li","Card_templateObject","url","img","Card_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","h2","_templateObject12","p","_templateObject13","List","_ref","CardBox","CardList","draggable","map","List_Card_Card","key","List_templateObject","ul","List_templateObject2","Browse","displayedData","restList","prevProps","Container","Browse_TopBar_TopBar","Browse_List_List","Browse_templateObject","Store","recordsData","cdsData","do_fetchStoreData","MusicStore_Container","MusicStore_Browse_Browse","react_loader_spinner_default","height","MusicStore_templateObject","App","Wrapper","global_styles","MusicStore","App_templateObject","store","createStore","applyMiddleware","thunk","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.780805c3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const FETCH_STORE_DATA_BEGIN    = \"FETCH_STORE_DATA_BEGIN\";\r\nexport const FETCH_STORE_DATA_SUCCEED = \"FETCH_STORE_DATA_SUCCEED\";\r\nexport const FETCH_STORE_DATA_FAILED = \"FETCH_STORE_DATA_FAILED\";\r\n\r\nexport const fetchStoreData = () => {\r\n  const API = \"https://raw.githubusercontent.com/almogbhl/junior-frontend-challenge-summer-2019/master/data.json\";\r\n\r\n  return dispatch => {\r\n    dispatch({ type: FETCH_STORE_DATA_BEGIN });\r\n    fetch(API)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        dispatch({\r\n          type: FETCH_STORE_DATA_SUCCEED,\r\n          payload: res\r\n        });\r\n      })\r\n      .catch(err =>\r\n        dispatch({\r\n          type: FETCH_STORE_DATA_FAILED,\r\n          payload: err\r\n        })\r\n      );\r\n  };\r\n};","export const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const DUPLICATE_ITEM = \"DUPLICATE_ITEM\";\r\n\r\nexport const deleteItem = (list, index) => {\r\n  let listName = list;\r\n\r\n  if (list === \"Vinyl Records\") {\r\n    listName = \"vinyl_records\";\r\n  } else {\r\n    listName = \"cds\";\r\n  }\r\n\r\n  return {\r\n    type: DELETE_ITEM,\r\n    payload: [listName, index]\r\n  };\r\n};\r\n\r\nexport const duplicateItem = (list, item) => {\r\n  let listName = list;\r\n\r\n  if (list === \"Vinyl Records\") {\r\n    listName = \"vinyl_records\";\r\n  } else {\r\n    listName = \"cds\";\r\n  }\r\n\r\n  return {\r\n    type: DUPLICATE_ITEM,\r\n    payload: [listName, item]\r\n  };\r\n};\r\n","import {\r\n  FETCH_STORE_DATA_BEGIN,\r\n  FETCH_STORE_DATA_SUCCEED,\r\n  FETCH_STORE_DATA_FAILED\r\n} from \"./MusicStore.action\";\r\n\r\nimport {\r\n  DELETE_ITEM,\r\n  DUPLICATE_ITEM,\r\n  deleteItem\r\n} from \"./Browse/List/Card/Card.action\";\r\n\r\nlet initialState = {\r\n  vinyl_records: null,\r\n  cds: null,\r\n  is_loading: false,\r\n  errMsg: \"\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STORE_DATA_BEGIN:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case FETCH_STORE_DATA_SUCCEED:\r\n      return {\r\n        ...state,\r\n        vinyl_records: action.payload[\"vinyl_records\"],\r\n        cds: action.payload[\"cds\"],\r\n        isLoading: false\r\n      };\r\n    case FETCH_STORE_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        errMsg: action.payload\r\n      };\r\n    case DELETE_ITEM:\r\n      let listNameDel = action.payload[0];\r\n      let index = action.payload[1];\r\n      let updatedList = state[listNameDel].filter((item, i) => i !== index);\r\n\r\n      return {\r\n        ...state,\r\n        [listNameDel]: updatedList\r\n      };\r\n    case DUPLICATE_ITEM:\r\n      let ListName = action.payload[0];\r\n      let item = action.payload[1];\r\n\r\n      return {\r\n        ...state,\r\n        [ListName]: [item, ...state[ListName]]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux'\r\n\r\nimport musicStoreReducer from './components/MusicStore/MusicStore.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  musicStore : musicStoreReducer\r\n})\r\n\r\nexport default rootReducer","import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: inherit;\r\n  text-decoration: none;\r\n  list-style: none;\r\n}\r\nhtml {\r\n  font-size: 62.5%;\r\n}\r\n\r\n:root {\r\n  overflow-x: hidden;\r\n}\r\n\r\nbody {\r\n  box-sizing: border-box;\r\n  font-family: 'Varela Round', serif\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: white;\r\n}\r\n\r\nh1, h2, h3 {\r\n  font-family: 'Suez One', serif;\r\n  color: rgba(0, 0, 0, 0.85);\r\n}\r\n\r\nh1 {\r\n  font-size: 2.8rem;\r\n}\r\n\r\n\r\n`;\r\n\r\n\r\n\r\nexport default GlobalStyle;","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Headline1 } from \"@material/react-typography\";\r\nimport TextField, { HelperText, Input } from \"@material/react-text-field\";\r\nimport MaterialIcon from \"@material/react-material-icon\";\r\nimport Button from \"@material/react-button\";\r\nimport \"@material/react-text-field/dist/text-field.css\";\r\nimport \"@material/react-button/dist/button.css\";\r\n\r\nclass TopBar extends Component {\r\n  state = {\r\n    value: \"\",\r\n    textFieldWidth: \"calc(50% - 10px)\",\r\n    buttonWidth: \"calc(25% - 10px)\"\r\n  };\r\n\r\n  // adding resize event\r\n  // calc\r\n  componentDidMount() {\r\n    this.calcWidth();\r\n    window.addEventListener(\"resize\", this.calcWidth);\r\n  }\r\n  // removing resize event\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.calcWidth);\r\n  }\r\n\r\n  // calculate the window width and by that split the width of the header \r\n  calcWidth = () => {\r\n    const width = window.innerWidth;\r\n\r\n    if (width >= 700) {\r\n      this.setState({\r\n        textFieldWidth: \"calc(70% - 10px)\",\r\n        buttonWidth: \"calc(15% - 10px)\"\r\n      });\r\n    }\r\n  };\r\n\r\n  // filtering the list by the name or the artist name and send the data as a call back\r\n  updateList = () => {\r\n    const { originalData , on_filter } = this.props;\r\n    let txt = this.state.value;\r\n\r\n    let filtered_list = originalData.filter( item => {\r\n     return item.artist_name.toLowerCase().includes(txt.toLowerCase()) || item.name.toLowerCase().includes(txt.toLowerCase())\r\n    })\r\n\r\n    on_filter(filtered_list)\r\n}\r\n\r\n  // on reset the data clear the input value\r\n  onResetList = () => {\r\n    const { resetList } = this.props;\r\n\r\n    resetList();\r\n    this.setState({value: \"\"});\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n    const { textFieldWidth, buttonWidth} = this.state;\r\n\r\n    const styles = {\r\n      textField: {\r\n        backgroundColor: \"white\",\r\n        fontSize: \"2rem\",\r\n        width: textFieldWidth\r\n      },\r\n      form: {\r\n        padding: \"0px 0px 0px 0px\",\r\n        fontFamily: \"Varela Round\",\r\n        fontSize: \"1.2rem\",\r\n        borderColor: \"hsla(0, 0%, 85.1%, 0.5)\"\r\n      },\r\n      button: {\r\n        width: buttonWidth,\r\n        fontSize: \"1.1rem\",\r\n        borderRadius: \"100px\",\r\n        letterSpacing: \"1px\",\r\n        marginTop: \"16px\",\r\n        backgroundColor: \"#1d5fd8\"\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Header>\r\n        <Headline1>{title}</Headline1>\r\n        <Box>\r\n          <TextField\r\n            style={styles.textField}\r\n            trailingIcon={<MaterialIcon role=\"button\" icon=\"search\" />}\r\n          >\r\n            <Input\r\n              placeholder={title}\r\n              style={styles.form}\r\n              value={this.state.value}\r\n              onChange={e => this.setState({ value: e.currentTarget.value })}\r\n            />\r\n          </TextField>\r\n          <Button raised style={styles.button} onClick={this.updateList}>\r\n            SEARCH\r\n          </Button>\r\n          <Button\r\n          onClick={this.onResetList}\r\n            outlined\r\n            style={{\r\n              ...styles.button,\r\n              backgroundColor: \"white\",\r\n              borderColor: \"hsla(0, 0%, 85.1%, 0.5)\",\r\n              color: \"rgba(0, 0, 0, 0.85)\"\r\n            }}\r\n          >\r\n            RESET\r\n          </Button>\r\n        </Box>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n  width: 100%;\r\n  max-width: 700px;\r\n\r\n  @media (min-width: 921px) {\r\n    width: 921px;\r\n    max-width: 921px;\r\n  }\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 3rem;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { deleteItem, duplicateItem } from \"./Card.action\";\r\nimport Button from \"@material/react-button\";\r\nimport MaterialIcon from \"@material/react-material-icon\";\r\nimport \"@material/react-button/dist/button.css\";\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    isHover: false\r\n  };\r\n\r\n\r\n  onItemEnter = () => {\r\n    this.setState({\r\n      isHover: true\r\n    });\r\n  };\r\n\r\n  onItemLeave = () => {\r\n    this.setState({\r\n      isHover: false\r\n    });\r\n  };\r\n\r\n  // dispatch an action - duplicateItem\r\n  duplicateItem = () => {\r\n    const { view, do_duplicateItem, data } = this.props;\r\n    do_duplicateItem(view, data);\r\n  };\r\n\r\n  // dispatch an action - do_deleteItem\r\n  deleteItem = () => {\r\n    const { view, do_deleteItem, index } = this.props;\r\n    do_deleteItem(view, index);\r\n  };\r\n\r\n  render() {\r\n    const view = this.props.view;\r\n    const isHover = this.state.isHover;\r\n\r\n    const {\r\n      genre,\r\n      artist_image,\r\n      artist_name,\r\n      name,\r\n      image,\r\n      tracks_number,\r\n      quantity_in_stock,\r\n      quantity\r\n    } = this.props.data;\r\n\r\n    return (\r\n      <Item\r\n        ref=\"item\"\r\n        shape={view}\r\n        onMouseEnter={this.onItemEnter}\r\n        onMouseLeave={this.onItemLeave}\r\n      >\r\n        <BackImg src={image} alt=\"artist cover\" />\r\n        <GreyBackground shape={view} isHover={isHover}>\r\n          <CenterBox isHover={isHover}>\r\n            <Button\r\n              onClick={this.duplicateItem}\r\n              raised\r\n              style={{ marginRight: \"2rem\", borderRadius: \"100px\" }}\r\n            >\r\n              <MaterialIcon role=\"button\" icon=\"file_copy\" />\r\n            </Button>\r\n            <Button\r\n              onClick={this.deleteItem}\r\n              raised\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                borderRadius: \"100px\"\r\n              }}\r\n            >\r\n              DELETE\r\n            </Button>\r\n          </CenterBox>\r\n        </GreyBackground>\r\n        <Top shape={view}>\r\n          <Genre shape={view}>{genre}</Genre>\r\n          <ArtistImage src={artist_image} alt=\"artist\" />\r\n        </Top>\r\n        <Middle>\r\n          <ArtistName>{artist_name}</ArtistName>\r\n          <Name>{name}</Name>\r\n        </Middle>\r\n        <Bottom shape={view}>\r\n          <TracksNum shape={view}>{tracks_number}</TracksNum>\r\n          <Quantity>{`${quantity_in_stock}/${quantity}`}</Quantity>\r\n        </Bottom>\r\n      </Item>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    do_deleteItem: (list, name) => dispatch(deleteItem(list, name)),\r\n    do_duplicateItem: (list, item) => dispatch(duplicateItem(list, item))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Card);\r\n\r\nconst Item = styled.li`\r\n  position: relative;\r\n  font-family: \"Varela Round\";\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 280px;\r\n  max-width: 280px;\r\n  height: ${props => (props.shape === \"CDs\" ? \"280px\" : \"300px\")};\r\n  /* background-image: url(${props => props.url});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat; */\r\n  border-radius: ${props => (props.shape === \"CDs\" ? \"50%\" : \"18px\")};\r\n  margin: 2rem 0px;\r\n  box-shadow: 0 10px 30px 0 rgba(207, 217, 230, 0.5), 10px 10px 30px 0 #e8ecf1;\r\n  margin-right: 2rem;\r\n\r\n  &:last-child {\r\n    margin-right: 0px;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    width: calc(50% - 4rem);\r\n  }\r\n  @media (min-width: 900px) {\r\n    width: calc(33.333% - 4rem);\r\n  }\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  border-radius: inherit;\r\n  object-fit: cover;\r\n  object-position: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-width: 100%;\r\n`;\r\n\r\nconst GreyBackground = styled.div`\r\n  position: absolute;\r\n  border-radius: ${props => (props.shape === \"CDs\" ? \"50%\" : \"18px\")};\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  background: ${props =>\r\n    props.isHover\r\n    ? \"rgba(128,128,128,.9)\"\r\n    : \"linear-gradient(rgba(69, 69, 69, 0.6) 0%,rgba(0, 0, 0, 0.5) 100%)\"};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: ${props => (props.isHover ? 1000 : 2)};\r\n`;\r\n\r\nconst CenterBox = styled.div`\r\n  display: flex;\r\n  visibility: ${props => (props.isHover ? \"visible\" : \"hidden\")};\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  z-index: 99;\r\n  padding: 0px 1.5rem;\r\n  flex-basis: 25%;\r\n  border-radius: 18px;\r\n  display: flex;\r\n  justify-content: ${props =>\r\n    props.shape === \"CDs\" ? \"center\" : \"space-between\"};\r\n  align-items: center;\r\n  color: white;\r\n`;\r\nconst Middle = styled.div`\r\n  z-index: 99;\r\n  flex-basis: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Bottom = styled(Top)``;\r\n\r\nconst Genre = styled.div`\r\n  font-size: 1.2rem;\r\n  margin-right: ${props => (props.shape === \"CDs\" ? \"3rem\" : \"0px\")};\r\n`;\r\nconst ArtistImage = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n`;\r\nconst TracksNum = styled.div`\r\n  border-radius: 50%;\r\n  font-size: 1.5rem;\r\n  background-color: hsla(0, 0%, 85.1%, 0.5);\r\n  width: 3rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: ${props => (props.shape === \"CDs\" ? \"3rem\" : \"0px\")};\r\n`;\r\nconst Quantity = styled.div`\r\n  border-radius: 40%;\r\n  font-size: 1.1rem;\r\n  background-color: hsla(0, 0%, 85.1%, 0.5);\r\n  width: 3.5rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ArtistName = styled.h2`\r\n  font-size: 3rem;\r\n  color: white;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 1.5rem;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"./Card/Card\";\r\n\r\nconst List = ({ data, view }) => {\r\n  return (\r\n    <CardBox>\r\n      <CardList draggable=\"true\">\r\n        {data.map((item, index) => (\r\n          <Card key={item.name} data={item} view={view} index={index}/>\r\n        ))}\r\n      </CardList>\r\n    </CardBox>\r\n  );\r\n};\r\n\r\nexport default List;\r\n\r\nconst CardBox = styled.div`\r\n  overflow: scroll;\r\n  margin-left: 2rem;\r\n\r\n  [draggable=\"true\"] {\r\n    cursor: move;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    height: 0px;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    overflow: hidden;\r\n\r\n    [draggable=\"true\"] {\r\n      cursor: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 300px;\r\n\r\n  @media (min-width: 700px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: 921px) {\r\n    width: 921px;\r\n    max-width: 921px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport List from \"./List/List\";\r\n\r\nclass Browse extends Component {\r\n  state = {\r\n    originalData: null,\r\n    displayedData: null,\r\n    title: \"\"\r\n  };\r\n\r\n  // update state with the data\r\n  componentDidMount() {\r\n    const { type, data } = this.props;\r\n  \r\n    this.setState({\r\n      originalData: data,\r\n      displayedData: data,\r\n      title: type\r\n    });\r\n  }\r\n\r\n  // update state with the data after duplicate / deleting item\r\n  componentDidUpdate(prevProps) {\r\n    const { data } = this.props;\r\n    \r\n    if (data !== prevProps.data) {\r\n      this.setState({\r\n        originalData: data,\r\n        displayedData: data\r\n     });\r\n    }\r\n  }\r\n\r\n  // update the displayed list after filtering in search bar\r\n  updateList = data => {\r\n    this.setState({\r\n      displayedData: data\r\n    });\r\n  };\r\n  // reset the displayedData list to the all the items\r\n  restList = () => {\r\n    this.setState({\r\n      displayedData: this.state.originalData\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, originalData, displayedData } = this.state;\r\n\r\n    if (originalData != null) {\r\n      return (\r\n        <Container>\r\n          <TopBar\r\n            title={title}\r\n            originalData={originalData}\r\n            on_filter={data => this.updateList(data)}\r\n            resetList={this.restList}\r\n          />\r\n          <List data={displayedData} view={title} />\r\n        </Container>\r\n      );\r\n    } else {\r\n      return \"loading...\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default Browse;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 300px;\r\n  min-width: 280px;\r\n  margin: 3rem 4rem;\r\n\r\n  @media (min-width: 700px) {\r\n    min-width: 700px;\r\n    width: 100%;\r\n    padding: 3rem 8rem;\r\n  }\r\n  @media (min-width: 921px) {\r\n    max-width: 930px;\r\n    padding: 3rem 10rem;\r\n  }\r\n\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { fetchStoreData } from \"./MusicStore.action\";\r\nimport Browse from \"./Browse/Browse\";\r\n\r\nclass Store extends Component {\r\n  state = {\r\n    recordsData: null,\r\n    cdsData: null\r\n  };\r\n\r\n  // dispatch an action\r\n  // fetch the data\r\n  componentDidMount() {\r\n    this.props.do_fetchStoreData();\r\n  }\r\n\r\n  // update the state every time the props gets update\r\n  componentDidUpdate(prevProps) {\r\n    const { vinyl_records, cds } = this.props;\r\n    \r\n    // the initial update from redux store after fetching getting the data\r\n    if (vinyl_records !== prevProps.vinyl_records && cds !== prevProps.cds) {\r\n      this.setState({\r\n        recordsData: vinyl_records,\r\n        cdsData: cds\r\n      });\r\n    }\r\n    // vinyl_records update list - duplicate / deleting item\r\n    if (vinyl_records !== prevProps.vinyl_records) {\r\n      this.setState({ recordsData: vinyl_records });\r\n    }\r\n    // cds update list - duplicate / deleting item\r\n    if (cds !== prevProps.cds) {\r\n      this.setState({ cdsData: cds });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { recordsData, cdsData } = this.state;\r\n\r\n    if (recordsData != null) {\r\n      return (\r\n        <Container>\r\n          <Browse type=\"Vinyl Records\" data={recordsData} />\r\n          <Browse type=\"CDs\" data={cdsData} />\r\n        </Container>\r\n      );\r\n    } else {\r\n      return <Loader type=\"Oval\" color=\"black\" height=\"100\" width=\"100\" />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    vinyl_records: state.musicStore.vinyl_records,\r\n    cds: state.musicStore.cds\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    do_fetchStoreData: () => dispatch(fetchStoreData())\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Store);\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GlobalStyle from \"./styles/global.styles\";\nimport MusicStore from './components/MusicStore/MusicStore';\n\nfunction App() {\n  return (\n    <Wrapper>\n      <GlobalStyle />\n\n      <MusicStore />\n    </Wrapper>\n  );\n}\n\nexport default App;\n\nconst Wrapper = styled.div`\n\n`;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./rootReducer\";\nimport App from './App';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nrender(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}